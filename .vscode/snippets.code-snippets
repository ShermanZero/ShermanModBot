{
  // Place your ShermanModBot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "props": {
    "scope": "javascript,typescript",
    "prefix": "props",
    "body": [
      "const properties: CommandType[\"properties\"] = {",
      "elevation: GuildElevationTypes.${1|everyone,moderator,administrator,botowner|},",
      "description: \"${2}\",",
      "usage: \"${3}\",",
      "aliases: [\"${4}\"]",
      "}\n\n"
    ]
  },

  "run": {
    "scope": "javascript,typescript",
    "prefix": "run",
    "body": ["const run: CommandType[\"run\"] = async(client: Client, message: Message, ...args: any): Promise<boolean> => {\n", "${0}", "}\n\n"]
  },

  "exports": {
    "scope": "javascript,typescript",
    "prefix": "exp",
    "body": ["module.exports.run = run;\nmodule.exports.properties = properties;"]
  },

  "command": {
    "scope": "javascript,typescript",
    "prefix": "command",
    "body": [
      "const properties: CommandType[\"properties\"] = {",
      "elevation: GuildElevationTypes.${1|everyone,moderator,administrator,botowner|},",
      "description: \"${2}\",",
      "usage: \"${3}\",",
      "aliases: [\"${4}\"]",
      "}\n",
      "const run: CommandType[\"run\"] = async(client: Client, message: Message, ...args: any): Promise<boolean> => {\n",
      "${0}",
      "}\n",
      "const custom: { }\n",
      "module.exports.run = run;",
      "module.exports.props = props;"
    ]
  }
}
