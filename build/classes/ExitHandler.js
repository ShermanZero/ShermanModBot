"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("colors");
class ExitHandler {
    static init(client) {
        console.log(`Registered client with ExitHandler... your crashes are protected now :)`.inverse, "\n...");
        process.on("exit", ExitHandler.exitHandler.bind(null, client, { clean: true }));
        process.on("SIGINT", ExitHandler.exitHandler.bind(null, client, { clean: true }));
        process.on("SIGUSR1", ExitHandler.exitHandler.bind(null, client, { clean: true }));
        process.on("SIGUSR2", ExitHandler.exitHandler.bind(null, client, { clean: true }));
        process.on("uncaughtException", (e) => {
            console.log("Uncaught exception:");
            console.log(e.stack.red.dim);
        });
        process.on("unhandledRejection", (e) => {
            console.log("Unhandled rejection:");
            console.log(e.stack.red.dim);
        });
    }
    static exitHandler(client, options, exitCode) {
        if (client.alreadyShutdown)
            return;
        console.log(`Preparing to shutdown with exit code (${exitCode})...`.magenta);
        if (exitCode == 2) {
            console.log("Forcing shutdown without clean attempt, process will not be restarted".red);
            client.destroy();
        }
        else if (options.clean) {
            console.log("Attempting to run `restart` command...".magenta);
            client.commands.get("restart").run(client, null, false);
        }
    }
}
exports.default = ExitHandler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhpdEhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xhc3Nlcy9FeGl0SGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtCQUFnQjtBQUloQixNQUFxQixXQUFXO0lBRTlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBYztRQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLHlFQUF5RSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUd4RyxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQWEsRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztRQUd2RixPQUFPLENBQUMsRUFBRSxDQUFDLFFBQWUsRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztRQUd6RixPQUFPLENBQUMsRUFBRSxDQUFDLFNBQWdCLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUYsT0FBTyxDQUFDLEVBQUUsQ0FBQyxTQUFnQixFQUFFLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRzFGLE9BQU8sQ0FBQyxFQUFFLENBQUMsbUJBQTBCLEVBQUUsQ0FBQyxDQUFRLEVBQUUsRUFBRTtZQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDbkMsT0FBTyxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUMsS0FBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QyxDQUFDLENBQUMsQ0FBQztRQUdILE9BQU8sQ0FBQyxFQUFFLENBQUMsb0JBQTJCLEVBQUUsQ0FBQyxDQUFRLEVBQUUsRUFBRTtZQUNuRCxPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7WUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUMsS0FBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQVcsRUFBRSxPQUFZLEVBQUUsUUFBZ0I7UUFFNUQsSUFBSSxNQUFNLENBQUMsZUFBZTtZQUFFLE9BQU87UUFFbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5Q0FBeUMsUUFBUSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFN0UsSUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO1lBQ2pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUVBQXVFLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDekYsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2xCO2FBQU0sSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1lBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0NBQXdDLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDOUQsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0NBQ0Y7QUExQ0QsOEJBMENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdjb2xvcnMnO1xyXG5cclxuaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSAnZGlzY29yZC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeGl0SGFuZGxlciB7XHJcbiAgLy9pbml0aWFsaXplXHJcbiAgc3RhdGljIGluaXQoY2xpZW50OiBDbGllbnQpIHtcclxuICAgIGNvbnNvbGUubG9nKGBSZWdpc3RlcmVkIGNsaWVudCB3aXRoIEV4aXRIYW5kbGVyLi4uIHlvdXIgY3Jhc2hlcyBhcmUgcHJvdGVjdGVkIG5vdyA6KWAuaW52ZXJzZSwgXCJcXG4uLi5cIik7XHJcblxyXG4gICAgLy93aGVuIGFwcCBpcyBjbG9zaW5nXHJcbiAgICBwcm9jZXNzLm9uKFwiZXhpdFwiIGFzIGFueSwgRXhpdEhhbmRsZXIuZXhpdEhhbmRsZXIuYmluZChudWxsLCBjbGllbnQsIHsgY2xlYW46IHRydWUgfSkpO1xyXG5cclxuICAgIC8vY2F0Y2hlcyBjdHJsLWMgZXZlbnRcclxuICAgIHByb2Nlc3Mub24oXCJTSUdJTlRcIiBhcyBhbnksIEV4aXRIYW5kbGVyLmV4aXRIYW5kbGVyLmJpbmQobnVsbCwgY2xpZW50LCB7IGNsZWFuOiB0cnVlIH0pKTtcclxuXHJcbiAgICAvL2NhdGNoZXMga2lsbCBwaWRcclxuICAgIHByb2Nlc3Mub24oXCJTSUdVU1IxXCIgYXMgYW55LCBFeGl0SGFuZGxlci5leGl0SGFuZGxlci5iaW5kKG51bGwsIGNsaWVudCwgeyBjbGVhbjogdHJ1ZSB9KSk7XHJcbiAgICBwcm9jZXNzLm9uKFwiU0lHVVNSMlwiIGFzIGFueSwgRXhpdEhhbmRsZXIuZXhpdEhhbmRsZXIuYmluZChudWxsLCBjbGllbnQsIHsgY2xlYW46IHRydWUgfSkpO1xyXG5cclxuICAgIC8vY2F0Y2hlcyB1bmNhdWdodCBleGNlcHRpb25zXHJcbiAgICBwcm9jZXNzLm9uKFwidW5jYXVnaHRFeGNlcHRpb25cIiBhcyBhbnksIChlOiBFcnJvcikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlVuY2F1Z2h0IGV4Y2VwdGlvbjpcIik7XHJcbiAgICAgIGNvbnNvbGUubG9nKChlLnN0YWNrIGFzIGFueSkucmVkLmRpbSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL2NhdGNoIHVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbnNcclxuICAgIHByb2Nlc3Mub24oXCJ1bmhhbmRsZWRSZWplY3Rpb25cIiBhcyBhbnksIChlOiBFcnJvcikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlVuaGFuZGxlZCByZWplY3Rpb246XCIpO1xyXG4gICAgICBjb25zb2xlLmxvZygoZS5zdGFjayBhcyBhbnkpLnJlZC5kaW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZXhpdEhhbmRsZXIoY2xpZW50OiBhbnksIG9wdGlvbnM6IGFueSwgZXhpdENvZGU6IG51bWJlcikge1xyXG4gICAgLy9pZiB3ZSBleGVjdXRlZCB0aGUgXCJyZXN0YXJ0XCIgY29tbWFuZFxyXG4gICAgaWYgKGNsaWVudC5hbHJlYWR5U2h1dGRvd24pIHJldHVybjtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhgUHJlcGFyaW5nIHRvIHNodXRkb3duIHdpdGggZXhpdCBjb2RlICgke2V4aXRDb2RlfSkuLi5gLm1hZ2VudGEpO1xyXG5cclxuICAgIGlmIChleGl0Q29kZSA9PSAyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiRm9yY2luZyBzaHV0ZG93biB3aXRob3V0IGNsZWFuIGF0dGVtcHQsIHByb2Nlc3Mgd2lsbCBub3QgYmUgcmVzdGFydGVkXCIucmVkKTtcclxuICAgICAgY2xpZW50LmRlc3Ryb3koKTtcclxuICAgIH0gZWxzZSBpZiAob3B0aW9ucy5jbGVhbikge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkF0dGVtcHRpbmcgdG8gcnVuIGByZXN0YXJ0YCBjb21tYW5kLi4uXCIubWFnZW50YSk7XHJcbiAgICAgIGNsaWVudC5jb21tYW5kcy5nZXQoXCJyZXN0YXJ0XCIpLnJ1bihjbGllbnQsIG51bGwsIGZhbHNlKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19